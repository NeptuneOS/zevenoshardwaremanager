#!/bin/bash
# 
# #############################
# Install graphics driver
# 
# A tool to install/uninstall
# proprietary graphics drivers
# 
# License: GPLv3
# Author: Leszek Lesner
#
# #############################

function check() {
	CARD_ID=$( lspci -n | grep -E '^[^[:space:]]+\.0[[:space:]]+(0300|0302|0380)' | grep -Eio '[a-f0-9]{4}:[a-f0-9]{4}' )	
	CARD_NAME=$( lspci | grep -iE '(VGA compatible controller|3D controller|Display controller)' | grep -E '(^[^:]+:[^:\.]+[:\.]0)[[:space:]]' | cut -d ':' -f 3-4 | cut -d ' ' -f 2-50 | tr ' ' '-' )
        cardBrand=$( echo $CARD_ID | cut -d ':' -f1 )
	cardNumber=$( echo $CARD_ID | cut -d ':' -f2 )
	case $cardBrand in
		10de|12d2)
		  CARD_TYPE="nvidia"
                  case $cardNumber in
				# http://listing.driveragent.com/pci/10de/?q=94c3 # later series
				# http://listing.driveragent.com/pci/12d2/?q=94c3 # full legacy
				0008|0009|0010|0018|0019)
					NOT_SUPPORTED=true
					;;
				0020|0028|0029|002c|002d|00a0|0100|0101|0103|0150|0151|0152|0153|0170)
					NOT_SUPPORTED=true
					;;
				0110|0111|0112|0113|0170|0171|0172|0173|0174|0175|0176|0177|0178|0179|017a|017c|017d|0180|0181|0182|0183|0185|0186|0187|0188|018a|018b|018c|01a0|01f0|0200|0201|0202|0203|0250|0251|0253|0258|0259|025b|0280|0281|0282|0286|0288|0289|028c)
					NOT_SUPPORTED=true
					;;
				# This is for the GeForce FX 5xxx series. Not sure about the quadro fx series:
				# 004d 004e 09d0 009d 00cd 00ce 00fe 019d 019e
				004d|004e|09d0|009d|00cd|00ce|00fe|019d|019e|00fa|00fb|00fc|031a|031b|0301|0302|0308|0309|0311|0312|0314|0319|0320|0321|0322|0323|0324|0325|0326|0327|0328|0329|032c|032d|0330|0331|0332|0333|0334|0341|0342|0343|0344|0347|0348)
					NOT_SUPPORTED=false
					DRIVER_VERSION="nvidia-legacy-173xx-driver"
					;;
				# list of 6/7xxx devices: http://nvidia.custhelp.com/app/answers/detail/a_id/3142
				0040|0041|0042|0043|0044|0045|0046|0047|0048|004e|0090|0091|0092|0093|0095|0098|0099|009d|00c0|00c1|00c2|00c3|00c8|00c9|00cc|00cd|00ce|00f1|00f2|00f3|00f4|00f5|00f6|00f8|00f9|0140|0141|0142|0143|0144|0145|0146|0147|0148|0149|014a|014c|014d|014e|014f|0160|0161|0162|0163|0164|0165|0166|0167|0168|0169|016a|01d0|01d1|01d2|01d3|01d6|01d7|01d8|01da|01db|01dc|01dd|01de|01df|0211|0212|0215|0218|0221|0222|0240|0241|0242|0244|0245|0247|0290|0x0291|0292|0293|0294|0295|0297|0298|0299|029a|029b|029c|029d|029e|029f|02e0|02e1|02e2|02e3|02e4|038b|0390|0391|0392|0393|0394|0395|0397|0398|0399|039c|039e|03d0|03d1|03d2|03d5|03d6|0531|0533|053a|053b|053e|07e0|07e1|07e2|07e3|07e5)
					NOT_SUPPORTED=false
					DRIVER_VERSION="nvidia-legacy-304xx-driver"
					;;
				*)
					NOT_SUPPORTED=false
					DRIVER_VERSION="nvidia-driver"
					;;
			esac
                  ;;
		1002)
		  CARD_TYPE="ati"
		  case $cardNumber in
				# fireGL cards, temp no support in fglrx
				# http://wiki.cchtml.com/index.php/Hardware
				# note: 4e50 should work with 8.4 driver
				3154|3e54|4147|4154|4a4d|4e47|4e4b|4e54|5464|5550|5551|564a|564b|5b64|5d49|5e48|5e49|71C4)
					NOT_SUPPORTED=true
					;;
				# http://listing.driveragent.com/pci/1002/?q=94c3
				0544)
					NOT_SUPPORTED=true
					;;
				4136|4137|4237|4242|4243|4336|4337|4354|4358|4437|4554|4654|4742|4744|4747|4749|474c|474d|474e|474f|4750|4751|4752|4753|4754|4755|4756|4757|4758|4759|475a|4964|4965|4966|4967|496e|496f|4c42|4c44|4c45|4c46|4c47|4c49|4c4d|4c4e|4c50|4c51|4c52|4c53|4c54|4c57|4c58|4c59|4c5a|4c64|4c65|4c66|4c67|4c6e|4c6f|4d46|4d4c|4f72|4f73)
					NOT_SUPPORTED=true
					;;
				5041|5042|5043|5044|5045|5046|5047|5048|5049|504a|504b|504c|504d|504e|504f|5050|5051|5052|5053|5054|5055|5056|5057|5058|5144|5145|5146|5147|5148|5149|514a|514b|514c|514d|514e|514f|5154|5155|5157|5158|5159|515a|515e|515f|5168|5169|516a|516b|516c|516d|516f|5245|5246|5247|524b|524c|5345|5346|5347|5348|534b|534c|534d|534e|5354|5446|544c|5452|5453|5454|5455|5654|5655|5656|5833|5834|5835|5838|5854|5874|5940|5941|5942|5944|5960|5961|5962|5964|5965|5969|5c41|5c43|5c61|5c63|5d44)
					NOT_SUPPORTED=true
					;;
				7c37|728c|7834|7835)
					NOT_SUPPORTED=true
					;;
				3*|4*|5*|7*)
					NOT_SUPPORTED=true
					;;
				94*|95*|97*)
					NOT_SUPPORTED=true
					;;
				*)
					NOT_SUPPORTED=false
					DRIVER_VERSION="fglrx-driver"
					;;
		  esac
		  ;;
		8086)
		  CARD_TYPE="intel"
		  NO_DRIVER=true
		  ;;	
	esac
	echo "Type:$CARD_TYPE"
	echo "Name:$CARD_NAME"
	if [ "$NOT_SUPPORTED" == true ]; then
		echo "Card not supported. ID:$cardNumber"
	else 
		echo "Driver:$DRIVER_VERSION"
	fi
} # check function

function install_driver() {
	INSTALL_PARAM=$1
	dpkg -l linux-headers-`uname -r`
	if [ $? == 0 ]; then
	  HEADERS="installed"
	else
	  HEADERS="notinstalled"
	fi
	#echo $HEADERS
	if [ $HEADERS == "notinstalled" ]; then
	  if ! "kdesudo qapt-batch linux-headers-$(uname -r)" ;then
     		echo 'Please install linux-headers-$(uname -r) package to proceed'
		exit 1
	  else
          	echo 'Headers installed'
          fi
	fi # Headers not installed
        case $INSTALL_PARAM in 
		nvidia)
		  kdesudo "qapt-batch $INSTALL_PARAM nvidia-xconfig" ;
		  kdesudo "modprobe nvidia"
		  kdesudo "nvidia-xconfig -o /etc/X11/xorg.conf"
		  ;;
		fglrx)
		  kdesudo "qapt-batch $INSTALL_PARAM fglrx-control xvba-va-driver amd-opencl-icd"
		  ;;
        esac
	if [ -d /live/image ]; then
    		if [ -e /live/image/live-rw ] || [ -e /live/image/live-sn ]; then
      			kdesudo "sed -i 's/quiet persistent/quiet persistent nomodeset/g' /live/image/syslinux.cfg"
                fi
    	fi # Live-RW & Live-SN IF
	kdialog --msgbox "Installation complete"
        echo "Installation complete"
} #install function


# Check parameters
if [ "$#" -ne 0 ]; then
	#echo "OPTIND starts at $OPTIND"
	while getopts ":i:u:c" optname
	do
	  case "$optname" in
      	    "c")
              #echo "Option $optname is specified"
	      check
              ;;
            "i")
              #echo "Option $optname has value $OPTARG"
	      install_driver $OPTARG
              ;;
            "u")
              echo "Option $optname has value $OPTARG"
              ;;
            "?")
              echo "Unknown option $OPTARG"
              ;;
            ":")
              echo "No argument value for option $OPTARG"
              ;;
            *)
              # Should not occur
              echo "Unknown error while processing options"
              ;;
          esac
          #echo "OPTIND is now $OPTIND"
        done
else 
	echo "No parameter given."
fi # parameter check



